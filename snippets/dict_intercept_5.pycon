>>> # Create a dictionary.
>>> d = {}
>>>
>>> # Insert out special key that equals "special".
>>> d[SpecialKey()] = 1
__hash__ called
>>>
>>> # Try to get an inexisting key.
>>> d[object()]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: <object object at 0xc0ffee04bee4>
>>>
>>> d["special"]
__eq__ called
1
>>>
>>> class RandomlyCollidingKey:
...     colliding = True
...     def __hash__(self):
...         return hash("special")
...     def __eq__(self, other):
...         # All RandomlyCollidingKey objects have this attribute
...         # set to True.
...         return bool(getattr(other, "colliding", None))
...
>>> d[RandomlyCollidingKey()]
__eq__ called
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: <__main__.RandomlyCollidingKey object at 0xfeeddeadbeef>
>>> d[RandomlyCollidingKey()] = 2
__eq__ called
>>> d["special"]
__eq__ called
1
>>> d[RandomlyCollidingKey()]
__eq__ called
2
